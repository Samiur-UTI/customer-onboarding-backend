version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: customer_app
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://user:password@postgres:5432/customer_db?schema=public
      - APP_PORT=5000
      - API_BASE_URL=http://localhost:5000 # Update to GCP external IP after deployment
      - REDIS_URL=redis://:redis_password@redis:6379
      - JWT_SECRET=production-secret-key
    ports:
      - "5000:5000" # Map host port 5000 to container port 5000
    depends_on:
      - postgres
      - redis
    networks:
      - app_network
    restart: unless-stopped

  postgres:
    image: postgres:15
    container_name: customer_postgres
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: customer_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app_network
    restart: unless-stopped

  redis:
    image: redis:7
    container_name: customer_redis
    command: redis-server --requirepass redis_password
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - app_network
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4:7
    container_name: customer_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@leadsync.ai
      PGADMIN_DEFAULT_PASSWORD: admin_password
      PGADMIN_LISTEN_PORT: 5050
    ports:
      - "5050:5050"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - app_network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  app_network:
    driver: bridge